{"version":3,"sources":["logo.svg","Components/HuggIndex.js","theme.js","Interfaces/HAppBar.js","Interfaces/HSearchInput.js","Components/HuggNavbar.js","Components/Pages/HuggPageList.js","Components/Pages/HuggPageMenu.js","Components/Pages/HuggPageContent.js","Components/Pages/HuggPageEdit.js","Components/Pages/HuggPage.js","Interfaces/HTextInput.js","Interfaces/HButton.js","Components/Users/HuggUserLogin.js","Components/Users/HuggUserProfile.js","Components/Users/HuggUserSignup.js","Components/Users/HuggUser.js","Components/Pages/HuggPageCreate.js","Components/Hugg.js","App.js","reportWebVitals.js","index.js"],"names":["HuggIndex","useState","useEffect","Container","Box","pt","fullWidth","src","logo","alt","width","Typography","variant","p","Link","component","RouterLink","to","themeOptions","createTheme","palette","primary","main","secondary","error","warning","info","success","text","components","MuiButtonBase","defaultProps","disableRipple","HAppBar","styled","AppBar","HSearchInput","InputBase","theme","HuggNavbar","display","flexGrow","IconButton","placeholder","type","Search","AccountCircle","HuggPageList","list","setList","getList","a","axios","get","process","tmpList","data","List","map","ListItemButton","title","_id","HuggPageMenu","props","justifyContent","sx","alignContent","HuggPageContent","match","page","setPage","getPage","params","res","logoUrl","id","dangerouslySetInnerHTML","__html","marked","content","HuggPageEdit","setLogo","history","useHistory","editPage","event","preventDefault","formData","FormData","document","getElementById","patch","headers","push","console","log","onSubmit","accept","name","onChange","e","target","files","TextField","multiline","rows","defaultValue","Button","HuggPage","path","exact","HTextInput","light","HButton","HuggUserLogin","errorMsg","setErrorMsg","loginUser","post","withCredentials","window","location","replace","response","maxWidth","HuggUserProfile","logout","userEmail","onClick","HuggUserSignup","signupUser","HuggUser","HuggPageCreate","createPage","Hugg","setUserEmail","authenticateUser","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"6TAAe,MAA0B,iC,OC0C1BA,EApCG,WAChB,MAAgCC,mBAAS,IAAzC,6BAIA,OAFAC,qBAAU,cAAU,IAGlB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,WAAS,EAArB,SACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,MAAM,UACjC,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACE,0CADF,WAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,mFACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,sJAGA,eAACR,EAAA,EAAD,CAAKS,EAAG,EAAR,UACE,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAI,UAAjC,0BADF,OAKE,cAACH,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAI,UAAjC,kDALF,OASE,cAACH,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAI,mBAAjC,uD,6DCGGC,EAjCMC,YAAY,CAC/BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAM,WAERG,QAAS,CACPH,KAAM,WAERI,KAAM,CACJJ,KAAM,WAERK,QAAS,CACPL,KAAM,WAERM,KAAM,CACJN,KAAM,YAGVO,WAAY,CACVC,cAAe,CACbC,aAAc,CACZC,eAAe,OClBRC,EAPCC,YAAOC,IAAPD,CAAH,yI,QCYEE,EAZMF,YAAOG,IAAPH,CAAH,+LAKII,EAAMlB,QAAQM,KAAKJ,MCwB1BiB,EAzBI,WACjB,OACE,cAAC,EAAD,UACE,cAACpC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKoC,QAAQ,OAAb,UACE,cAACpC,EAAA,EAAD,CAAKqC,SAAU,EAAf,SACE,cAACC,EAAA,EAAD,CAAY3B,UAAWC,IAAYC,GAAE,IAArC,SACE,qBAAKV,IAAKC,EAAME,MAAM,OAAOD,IAAI,aAGrC,eAACL,EAAA,EAAD,WACE,cAAC,EAAD,CAAcuC,YAAY,6DAC1B,cAACD,EAAA,EAAD,CAAYE,KAAK,SAAS,aAAW,SAArC,SACE,cAACC,EAAA,EAAD,MAEF,cAACH,EAAA,EAAD,CAAY3B,UAAWC,IAAYC,GAAI,SAAvC,SACE,cAAC6B,EAAA,EAAD,iB,kBCkBCC,EApCM,WACnB,MAAwB9C,mBAAS,MAAjC,mBAAO+C,EAAP,KAAaC,EAAb,KAiBA,OAfA/C,qBAAU,WACR,IAAMgD,EAAO,uCAAG,4BAAAC,EAAA,+EAEUC,IAAMC,IAAN,UACjBC,yBADiB,kBAFV,OAENC,EAFM,OAKZN,EAAQM,EAAQC,MALJ,gDAOZP,EAAQ,MAPI,yDAAH,qDAWbC,MACC,IAGD,cAAC/C,EAAA,EAAD,UACE,cAACsD,EAAA,EAAD,UACGT,GACCA,EAAKU,KAAI,SAACF,GAAD,OACP,cAACG,EAAA,EAAD,CAEE5C,UAAWD,IACXG,GAAE,iBAAYuC,EAAKI,OAHrB,SAKGJ,EAAKI,OAJDJ,EAAKK,aCFTC,EAxBM,SAACC,GACpB,IAAMH,EAAQG,EAAMH,MAEpB,OACE,cAACzD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKE,WAAS,EAACkC,QAAQ,OAAOwB,eAAe,WAA7C,SACE,eAAC5D,EAAA,EAAD,CAAK6D,GAAI,CAAEC,aAAc,iBAAzB,UACE,cAACpD,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAE,iBAAY2C,GAA3C,0BADF,OAKE,cAAC9C,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAE,iBAAY2C,EAAZ,YAA/B,sCALF,OASE,cAAC9C,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAE,iBAAY2C,EAAZ,SAA/B,8C,QCmBKO,EAhCS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,EAAwBnE,mBAAS,MAAjC,mBAAOoE,EAAP,KAAaC,EAAb,KAsBA,OAfApE,qBAAU,WACR,IAAMqE,EAAO,uCAAG,4BAAApB,EAAA,+EAEMC,IAAMC,IAAN,UACbC,yBADa,kBAC0Bc,EAAMI,OAAOZ,QAH7C,OAENa,EAFM,OAKZH,EAAQG,EAAIjB,MALA,gDAOZc,EAAQ,MAPI,yDAAH,qDAWbC,MACC,IAGD,eAACpE,EAAA,EAAD,WACE,qBAAKI,IAAK8D,GAAQA,EAAKK,QAAShE,MAAO,MACvC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0ByD,GAAQA,EAAKT,QACvC,qBAAKe,GAAG,UAAUC,wBAAyB,CAAEC,OAtBxCC,iBAAO,GAAD,OAAIT,GAAQA,EAAKU,iB,kBCkEnBC,EAvEM,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACdR,EAAUQ,EAAMI,OAAhBZ,MACR,EAAwB3D,mBAAS,IAAjC,mBAAOoE,EAAP,KAAaC,EAAb,KACA,EAAwBrE,mBAAS,MAAjC,mBAAOO,EAAP,KAAayE,EAAb,KACMC,EAAUC,cAGVC,EAAQ,uCAAG,WAAOC,GAAP,eAAAlC,EAAA,sEAEbkC,EAAMC,iBACAC,EAAW,IAAIC,SAASC,SAASC,eAAe,aAHzC,SAIPtC,IAAMuC,MAAN,UACDrC,yBADC,kBACsCe,EAAKR,KAC/C0B,EACA,CACEK,QAAS,CAAE,eAAgB,yBARlB,OAYbV,EAAQW,KAAR,iBAAuBjC,IAZV,gDAcbkC,QAAQC,IAAR,MAda,yDAAH,sDAgCd,OAdA7F,qBAAU,WACR,IAAMqE,EAAO,uCAAG,4BAAApB,EAAA,+EAEMC,IAAMC,IAAN,UACbC,yBADa,kBAC0Bc,EAAMI,OAAOZ,QAH7C,OAENa,EAFM,OAKZH,EAAQG,EAAIjB,MALA,gDAOZc,EAAQ,MAPI,yDAAH,qDAUbC,MACC,IAGD,eAACpE,EAAA,EAAD,WACE,+BACGyD,EADH,kBAIA,uBAAMoC,SAAUZ,EAAUT,GAAG,WAA7B,UACE,qBAAKpE,IAAK8D,GAAQA,EAAKK,QAASjE,IAAI,SACpC,qBAAKF,IAAKC,EAAMC,IAAI,cACpB,uBACEmC,KAAK,OACLqD,OAAO,UACPC,KAAK,OACLC,SAAU,SAACC,GACTnB,EAAQmB,EAAEC,OAAOC,MAAM,OAG3B,cAACC,EAAA,EAAD,CACEL,KAAK,UACL5F,WAAS,EACTkG,WAAS,EACTC,KAAM,GACNC,aAAcrC,GAAQA,EAAKU,UAE7B,cAAC4B,EAAA,EAAD,CAAQ/D,KAAK,SAAShC,QAAQ,YAA9B,8CC9COgG,EAjBE,SAAC,GAAe,IAC3BhD,EAD0B,EAAZQ,MACAI,OAAOZ,MAEzB,OACE,qCACE,cAAC,EAAD,CAAcA,MAAOA,IACrB,cAAC,IAAD,CACEiD,KAAK,gBACLC,OAAO,EACP/F,UAAWoD,IAEb,cAAC,IAAD,CAAO0C,KAAK,qBAAqB9F,UAAWiE,IAC5C,cAAC,IAAD,CAAO6B,KAAK,wBAAZ,qBCLSE,EATI7E,YAAOG,IAAPH,CAAH,wJAEMI,EAAMlB,QAAQQ,KAAKoF,MACnB1E,EAAMlB,QAAQM,KAAKJ,KAErBgB,EAAMlB,QAAQC,QAAQC,MCD3B2F,EALC/E,YAAOyE,IAAPzE,CAAH,sECgEEgF,EA5DO,WACpB,MAAgCjH,mBAAS,IAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAIMC,GAHUlC,cAGD,uCAAG,WAAOE,GAAP,eAAAlC,EAAA,sEAEdkC,EAAMC,iBACAC,EAAW,IAAIC,SAASC,SAASC,eAAe,cAHxC,SAKRtC,IAAMkE,KAAN,UACDhE,yBADC,gBAEJiC,EACA,CACEgC,iBAAiB,IATP,OAadC,OAAOC,SAASC,QAAQ,KAbV,gDAedN,EAAY,KAAMO,SAASnE,KAAKhC,OAflB,yDAAH,uDAmBf,OACE,cAACrB,EAAA,EAAD,UACE,iCACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAG4D,GAAI,CAAE2D,SAAU,KAA5B,UACE,cAACjH,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACCuG,EACD,uBAAMnB,SAAUqB,EAAW1C,GAAG,YAA9B,UACE,cAACvE,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CAAYqF,KAAK,QAAQvD,YAAY,qBAAMrC,WAAS,MAEtD,cAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CACEqF,KAAK,WACLtD,KAAK,WACLD,YAAY,2BACZrC,WAAS,MAGb,cAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CAAS+B,KAAK,SAAShC,QAAQ,YAAYN,WAAS,EAApD,qCAKJ,eAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,2EAEE,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAI,gBAAjC,iDCtBG4G,EA9BS,SAAC9D,GACPoB,cAAhB,IAGM2C,EAAM,uCAAG,sBAAA3E,EAAA,+EAELC,IAAMkE,KAAN,UACDhE,yBADC,iBAEJ,GACA,CACEiE,iBAAiB,IANV,OAUXC,OAAOC,SAASC,QAAQ,KAVb,uGAAH,qDAcZ,OACE,mCACE,eAACvH,EAAA,EAAD,8CACU4D,EAAMgE,UADhB,SAEE,cAAC,IAAD,CAAM9G,GAAG,eAAe+G,QAASF,EAAjC,4CCiDOG,EArEQ,WACrB,MAAgChI,mBAAS,IAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAGMc,EAAU,uCAAG,WAAO7C,GAAP,eAAAlC,EAAA,sEAEfkC,EAAMC,iBACAC,EAAW,IAAIC,SAASC,SAASC,eAAe,eAHvC,SAKTtC,IAAMkE,KAAN,UACDhE,yBADC,iBAEJiC,GAPa,uDAUf6B,EAAY,KAAMO,SAASnE,KAAKhC,OAVjB,yDAAH,sDAchB,OACE,cAACrB,EAAA,EAAD,UACE,iCACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAG4D,GAAI,CAAE2D,SAAU,KAA5B,UACE,cAACjH,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCACCuG,EACD,uBAAMnB,SAAUkC,EAAYvD,GAAG,aAA/B,UACE,cAACvE,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CAAYqF,KAAK,QAAQvD,YAAY,qBAAMrC,WAAS,MAEtD,cAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CACEqF,KAAK,WACLtD,KAAK,WACLD,YAAY,2BACZrC,WAAS,MAGb,cAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CACEqF,KAAK,gBACLtD,KAAK,WACLD,YAAY,wCACZrC,WAAS,MAGb,eAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,wDAEE,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAI,IAAjC,mDAFF,wFAOA,cAACb,EAAA,EAAD,CAAKS,EAAG,EAAR,SACE,cAAC,EAAD,CAASD,QAAQ,WAAWgC,KAAK,SAAStC,WAAS,EAAnD,wCAIF,eAACF,EAAA,EAAD,CAAKS,EAAG,EAAR,gEACc,IACZ,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAI,SAAjC,8CCpCCkH,EAtBE,SAACpE,GAChB,IAAMgE,EAAYhE,EAAMgE,UAExB,OAAIA,EAEA,mCACE,cAAC,IAAD,CACElB,KAAK,SACL9F,UAAW,kBAAM,cAAC,EAAD,CAAiBgH,UAAWA,SAMjD,qCACE,cAAC,IAAD,CAAOlB,KAAK,SAASC,OAAO,EAAM/F,UAAWmG,IAC7C,cAAC,IAAD,CAAOL,KAAK,gBAAgB9F,UAAWkH,QCehCG,GAhCQ,WACrB,MAAgCnI,mBAAS,IAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KACMlC,EAAUC,cAGVkD,EAAU,uCAAG,WAAOhD,GAAP,eAAAlC,EAAA,sEAEfkC,EAAMC,iBACAC,EAAW,IAAIC,SAASC,SAASC,eAAe,mBAHvC,SAIGtC,IAAMkE,KAAN,UACbhE,yBADa,UAEhBiC,GANa,cASfL,EAAQW,KAAR,WATe,gDAWfuB,EAAY,KAAMO,SAASnE,KAAKhC,OAXjB,yDAAH,sDAehB,OACE,eAACrB,EAAA,EAAD,WACGgH,EACD,iEACA,uBAAMnB,SAAUqC,EAAY1D,GAAG,iBAA/B,wCACS,cAAC,EAAD,CAAYuB,KAAK,UACxB,cAACS,EAAA,EAAD,CAAQ/D,KAAK,SAAb,6CCkBO0F,GAvCF,WACX,MAAkCrI,mBAAS,IAA3C,mBAAO8H,EAAP,KAAkBQ,EAAlB,KAGMC,EAAgB,uCAAG,4BAAArF,EAAA,+EAEEC,IAAMC,IAAN,UAClBC,yBADkB,UAErB,CACEiE,iBAAiB,IALA,OAEfI,EAFe,OAQrBY,EAAaZ,EAASnE,MARD,gDAUrBsC,QAAQC,IAAR,MAVqB,yDAAH,qDAkBtB,OAJA7F,qBAAU,WACRsI,MACC,IAGD,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3B,KAAK,IAAIC,OAAO,EAAM/F,UAAWf,IACxC,cAAC,IAAD,CAAO6G,KAAK,QAAQ9F,UAAWgC,IAC/B,cAAC,IAAD,CAAO8D,KAAK,gBAAgB9F,UAAW6F,IACvC,cAAC,IAAD,CAAOC,KAAK,UAAU9F,UAAWqH,KACjC,cAAC,IAAD,CACEvB,KAAK,SACL9F,UAAW,kBAAM,cAAC,EAAD,CAAUgH,UAAWA,GAAaA,cChC9CU,OARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,GAAD,OCMSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,GAAA,EAAD,CAAehH,MAAOA,EAAtB,SACE,cAAC,GAAD,QAGJmD,SAASC,eAAe,SAM1BgD,O","file":"static/js/main.97aa9f1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5412e914.svg\";","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Container, Box, Typography, Link } from '@mui/material';\n\nimport logo from '../logo.svg';\n\nconst HuggIndex = () => {\n  const [pageList, setPageList] = useState([]);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Container>\n      <Box pt={5} fullWidth>\n        <center>\n          <img src={logo} alt=\"logo\" width=\"100em\" />\n          <Typography variant=\"h3\">\n            <strong>hugg</strong>.link\n          </Typography>\n          <Typography variant=\"subtitle\">정보를 찾는 새로운 이정표</Typography>\n          <Typography variant=\"body2\">\n            24개의 문서 중에 당신에게 도움될 게 하나도 없을까요?\n          </Typography>\n          <Box p={1}>\n            <Link component={RouterLink} to={'/list/1'}>\n              목록\n            </Link>\n            &nbsp;\n            <Link component={RouterLink} to={'/create'}>\n              문서생성하기\n            </Link>\n            &nbsp;\n            <Link component={RouterLink} to={'/pages/hugg.link'}>\n              이용가이드\n            </Link>\n          </Box>\n        </center>\n      </Box>\n    </Container>\n  );\n};\n\nexport default HuggIndex;\n","import { createTheme } from '@mui/material/styles';\r\n\r\nconst themeOptions = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0d6efd',\r\n    },\r\n    secondary: {\r\n      main: '#363636',\r\n    },\r\n    error: {\r\n      main: '#dc3545',\r\n    },\r\n    warning: {\r\n      main: '#ffc107',\r\n    },\r\n    info: {\r\n      main: '#f8f9fa',\r\n    },\r\n    success: {\r\n      main: '#28a745',\r\n    },\r\n    text: {\r\n      main: '#6A6A6A',\r\n    },\r\n  },\r\n  components: {\r\n    MuiButtonBase: {\r\n      defaultProps: {\r\n        disableRipple: true,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default themeOptions;\r\n","import { styled } from '@mui/system';\r\nimport { AppBar } from '@mui/material';\r\nimport theme from '../theme';\r\n\r\nconst HAppBar = styled(AppBar)`\r\n  box-shadow: none;\r\n  position: static;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #c8c8c8;\r\n`;\r\n\r\nexport default HAppBar;\r\n","import { styled } from '@mui/system';\r\nimport { InputBase } from '@mui/material';\r\nimport theme from '../theme';\r\n\r\nconst HSearchInput = styled(InputBase)`\r\n  height: 100%;\r\n  padding-left: 1em;\r\n  border-left: 1px solid #c8c8c8;\r\n  border-right: 1px solid #c8c8c8;\r\n  background-color: ${theme.palette.info.main};\r\n\r\n  &:hover {\r\n    //\r\n  }\r\n`;\r\n\r\nexport default HSearchInput;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Box, IconButton, Container } from '@mui/material';\r\nimport { AccountCircle, Search } from '@mui/icons-material';\r\nimport logo from '../logo.svg';\r\nimport HAppBar from '../Interfaces/HAppBar';\r\nimport HSearchInput from '../Interfaces/HSearchInput';\r\n\r\nconst HuggNavbar = () => {\r\n  return (\r\n    <HAppBar>\r\n      <Container>\r\n        <Box display=\"flex\">\r\n          <Box flexGrow={1}>\r\n            <IconButton component={RouterLink} to={`/`}>\r\n              <img src={logo} width=\"24px\" alt=\"logo\" />\r\n            </IconButton>\r\n          </Box>\r\n          <Box>\r\n            <HSearchInput placeholder=\"검색어를 입력하세요.\" />\r\n            <IconButton type=\"submit\" aria-label=\"search\">\r\n              <Search />\r\n            </IconButton>\r\n            <IconButton component={RouterLink} to={'/users'}>\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </HAppBar>\r\n  );\r\n};\r\n\r\nexport default HuggNavbar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, List, ListItemButton } from '@mui/material';\r\n\r\nimport axios from 'axios';\r\n\r\nconst HuggPageList = () => {\r\n  const [list, setList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      try {\r\n        const tmpList = await axios.get(\r\n          `${process.env.REACT_APP_BACKEND}/pages/list/1`\r\n        );\r\n        setList(tmpList.data);\r\n      } catch (e) {\r\n        setList(null);\r\n      }\r\n    };\r\n\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <List>\r\n        {list &&\r\n          list.map((data) => (\r\n            <ListItemButton\r\n              key={data._id}\r\n              component={Link}\r\n              to={`/pages/${data.title}`}\r\n            >\r\n              {data.title}\r\n            </ListItemButton>\r\n          ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggPageList;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Box, Container, Link } from '@mui/material';\r\n\r\nconst HuggPageMenu = (props) => {\r\n  const title = props.title;\r\n\r\n  return (\r\n    <Container>\r\n      <Box fullWidth display=\"flex\" justifyContent=\"flex-end\">\r\n        <Box sx={{ alignContent: 'space-between' }}>\r\n          <Link component={RouterLink} to={`/pages/${title}`}>\r\n            댓글\r\n          </Link>\r\n          &nbsp;\r\n          <Link component={RouterLink} to={`/pages/${title}/history`}>\r\n            타임라인\r\n          </Link>\r\n          &nbsp;\r\n          <Link component={RouterLink} to={`/pages/${title}/edit`}>\r\n            문서수정\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggPageMenu;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container, Link, Typography, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { marked } from 'marked';\r\n\r\nconst HuggPageContent = ({ match }) => {\r\n  const [page, setPage] = useState(null);\r\n\r\n  // 마크다운 문법 파싱\r\n  const getMarked = () => {\r\n    return marked(`${page && page.content}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPage = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `${process.env.REACT_APP_BACKEND}/pages/${match.params.title}`\r\n        );\r\n        setPage(res.data);\r\n      } catch (e) {\r\n        setPage(null);\r\n      }\r\n    };\r\n\r\n    getPage();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <img src={page && page.logoUrl} width={200} />\r\n      <Typography variant=\"h4\">{page && page.title}</Typography>\r\n      <div id=\"content\" dangerouslySetInnerHTML={{ __html: getMarked() }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggPageContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Container, TextField, Button } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst HuggPageEdit = ({ match }) => {\r\n  const { title } = match.params;\r\n  const [page, setPage] = useState({});\r\n  const [logo, setLogo] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // 무결성인 page 고유 _id로 데이터를 전송해야 한다.\r\n  const editPage = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const formData = new FormData(document.getElementById('editForm'));\r\n      await axios.patch(\r\n        `${process.env.REACT_APP_BACKEND}/pages/${page._id}`,\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        }\r\n      );\r\n      // 페이지 이동\r\n      history.push(`/pages/${title}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPage = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `${process.env.REACT_APP_BACKEND}/pages/${match.params.title}`\r\n        );\r\n        setPage(res.data);\r\n      } catch (e) {\r\n        setPage(null);\r\n      }\r\n    };\r\n    getPage();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>\r\n        {title}\r\n        편집\r\n      </h1>\r\n      <form onSubmit={editPage} id=\"editForm\">\r\n        <img src={page && page.logoUrl} alt=\"logo\" />\r\n        <img src={logo} alt=\"logoAfter\" />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          name=\"file\"\r\n          onChange={(e) => {\r\n            setLogo(e.target.files[0]);\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"content\"\r\n          fullWidth\r\n          multiline\r\n          rows={20}\r\n          defaultValue={page && page.content}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          수정 완료\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggPageEdit;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport HuggPageMenu from './HuggPageMenu';\r\nimport HuggPageContent from './HuggPageContent';\r\nimport HuggPageEdit from './HuggPageEdit';\r\n\r\nconst HuggPage = ({ match }) => {\r\n  let title = match.params.title;\r\n\r\n  return (\r\n    <>\r\n      <HuggPageMenu title={title} />\r\n      <Route\r\n        path=\"/pages/:title\"\r\n        exact={true}\r\n        component={HuggPageContent}\r\n      ></Route>\r\n      <Route path=\"/pages/:title/edit\" component={HuggPageEdit}></Route>\r\n      <Route path=\"/pages/:title/history\">aaa</Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HuggPage;\r\n","import { styled } from '@mui/system';\r\nimport { InputBase } from '@mui/material';\r\nimport theme from '.././theme';\r\n\r\nconst HTextInput = styled(InputBase)`\r\n  padding: 5px 10px 5px 10px;\r\n  border: 1px solid ${theme.palette.text.light};\r\n  background-color: ${theme.palette.info.main};\r\n  &:hover {\r\n    border-color: ${theme.palette.primary.main};\r\n  }\r\n`;\r\n\r\nexport default HTextInput;\r\n","import { styled } from '@mui/system';\nimport { Button } from '@mui/material';\n\nconst HButton = styled(Button)`\n  border-radius: 0;\n  box-shadow: none;\n`;\n\nexport default HButton;\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { Container, Box, Typography, Link } from '@mui/material';\r\nimport HTextInput from '../../Interfaces/HTextInput';\r\nimport HButton from '../../Interfaces/HButton';\r\nimport axios from 'axios';\r\n\r\nconst HuggUserLogin = () => {\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const history = useHistory();\r\n\r\n  // 로그인\r\n  const loginUser = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const formData = new FormData(document.getElementById('loginForm'));\r\n\r\n      await axios.post(\r\n        `${process.env.REACT_APP_BACKEND}/users/login`,\r\n        formData,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      window.location.replace('/');\r\n    } catch (error) {\r\n      setErrorMsg(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <center>\r\n        <Box pt={3} sx={{ maxWidth: 480 }}>\r\n          <Typography variant=\"h5\">로그인</Typography>\r\n          {errorMsg}\r\n          <form onSubmit={loginUser} id=\"loginForm\">\r\n            <Box p={1}>\r\n              <HTextInput name=\"email\" placeholder=\"이메일\" fullWidth />\r\n            </Box>\r\n            <Box p={1}>\r\n              <HTextInput\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n            <Box p={1}>\r\n              <HButton type=\"submit\" variant=\"contained\" fullWidth>\r\n                로그인\r\n              </HButton>\r\n            </Box>\r\n          </form>\r\n          <Box p={1}>\r\n            아직 회원이 아니시라면\r\n            <Link component={RouterLink} to={'/users/signup'}>\r\n              회원가입\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </center>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggUserLogin;\r\n","import React from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { Container } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst HuggUserProfile = (props) => {\r\n  const history = useHistory();\r\n\r\n  // 로그아웃\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_BACKEND}/users/logout`,\r\n        {},\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      window.location.replace('/');\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        반갑습니다. {props.userEmail}님\r\n        <Link to=\"/users/login\" onClick={logout}>\r\n          로그아웃\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HuggUserProfile;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Container, Box, Typography, Link } from '@mui/material';\r\nimport HTextInput from '../../Interfaces/HTextInput';\r\nimport HButton from '../../Interfaces/HButton';\r\n\r\nconst HuggUserSignup = () => {\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  // 회원가입 요청\r\n  const signupUser = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const formData = new FormData(document.getElementById('signupForm'));\r\n\r\n      await axios.post(\r\n        `${process.env.REACT_APP_BACKEND}/users/signup`,\r\n        formData\r\n      );\r\n    } catch (error) {\r\n      setErrorMsg(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <center>\r\n        <Box pt={3} sx={{ maxWidth: 480 }}>\r\n          <Typography variant=\"h5\">회원가입</Typography>\r\n          {errorMsg}\r\n          <form onSubmit={signupUser} id=\"signupForm\">\r\n            <Box p={1}>\r\n              <HTextInput name=\"email\" placeholder=\"이메일\" fullWidth />\r\n            </Box>\r\n            <Box p={1}>\r\n              <HTextInput\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n            <Box p={1}>\r\n              <HTextInput\r\n                name=\"passwordCheck\"\r\n                type=\"password\"\r\n                placeholder=\"비밀번호 확인\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n            <Box p={1}>\r\n              회원가입 진행시\r\n              <Link component={RouterLink} to={'/'}>\r\n                허그 이용약관\r\n              </Link>\r\n              에 동의하는 것으로 간주합니다.\r\n            </Box>\r\n            <Box p={1}>\r\n              <HButton variant=\"outlined\" type=\"submit\" fullWidth>\r\n                회원가입\r\n              </HButton>\r\n            </Box>\r\n            <Box p={1}>\r\n              이미 계정이 있나요?{' '}\r\n              <Link component={RouterLink} to={'/users'}>\r\n                로그인\r\n              </Link>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </center>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggUserSignup;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport HuggUserLogin from './HuggUserLogin';\r\nimport HuggUserProfile from './HuggUserProfile';\r\nimport HuggUserSignup from './HuggUserSignup';\r\n\r\nconst HuggUser = (props) => {\r\n  const userEmail = props.userEmail;\r\n  // JWT 여부 확인\r\n  if (userEmail) {\r\n    return (\r\n      <>\r\n        <Route\r\n          path=\"/users\"\r\n          component={() => <HuggUserProfile userEmail={userEmail} />}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Route path=\"/users\" exact={true} component={HuggUserLogin} />\r\n        <Route path=\"/users/signup\" component={HuggUserSignup} />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HuggUser;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Container, Button } from '@mui/material';\r\nimport HTextInput from '../../Interfaces/HTextInput';\r\nimport axios from 'axios';\r\n\r\nconst HuggPageCreate = () => {\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const history = useHistory();\r\n\r\n  // 페이지 생성\r\n  const createPage = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const formData = new FormData(document.getElementById('createPageForm'));\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND}/pages`,\r\n        formData\r\n      );\r\n      // 페이지 이동\r\n      history.push(`/list/1`);\r\n    } catch (error) {\r\n      setErrorMsg(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {errorMsg}\r\n      <h1>페이지 생성</h1>\r\n      <form onSubmit={createPage} id=\"createPageForm\">\r\n        페이지명 : <HTextInput name=\"title\" />\r\n        <Button type=\"submit\">생성요청</Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HuggPageCreate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport HuggIndex from './HuggIndex';\r\nimport HuggNavbar from './HuggNavbar';\r\nimport HuggPageList from './Pages/HuggPageList';\r\nimport HuggPage from './Pages/HuggPage';\r\nimport HuggUser from './Users/HuggUser';\r\nimport HuggPageCreate from './Pages/HuggPageCreate';\r\n\r\nconst Hugg = () => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  // JWT 인증 여부 검증\r\n  const authenticateUser = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND}/users`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      setUserEmail(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    authenticateUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HuggNavbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact={true} component={HuggIndex}></Route>\r\n        <Route path=\"/list\" component={HuggPageList}></Route>\r\n        <Route path=\"/pages/:title\" component={HuggPage}></Route>\r\n        <Route path=\"/create\" component={HuggPageCreate}></Route>\r\n        <Route\r\n          path=\"/users\"\r\n          component={() => <HuggUser userEmail={userEmail && userEmail} />}\r\n        ></Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hugg;\r\n","import Hugg from './Components/Hugg';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Hugg />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}